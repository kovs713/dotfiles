{
	// vimrc
	"vim.leader": "<space>",
	"vim.useSystemClipboard": true,
	"editor.lineNumbers": "relative",
	"vim.hlsearch": true,
	"vim.incsearch": true,

	"vim.handleKeys": {
		"<F1>": true,
		"<F2>": true,
		"<F3>": true,
		"<F5>": true,
		"<F7>": true,
		"<C-=>": true,
		"<C-->": true,
		"<C-,>": true,
		"<C-.>": true,
		"<C-a>": true,
		"<Esc>": true,
		"<C-A-i>": false,
		"<C-A-o>": false,
		"<C-w>": false
	},

	// normal mode
	"vim.normalModeKeyBindingsNonRecursive": [
		{
			"before": ["<leader>", "f", "f"],
			"commands": ["editor.action.formatDocument"]
		},
		// <leader>i — Organize Imports
		{
			"before": ["<leader>", "i"],
			"commands": ["editor.action.organizeImports"]
		},

		// <leader>s — Save buffer (file you're in)
		{
			"before": ["<leader>", "s"],
			"commands": ["workbench.action.files.save"]
		},

		// <C-a> — Select all
		{ "before": ["<C-a>"], "commands": ["editor.action.selectAll"] },

		// <C-d>/<C-u> with centred
		{ "before": ["<C-d>"], "after": ["<C-d>", "z", "z"] },
		{ "before": ["<C-u>"], "after": ["<C-u>", "z", "z"] },

		{ "before": ["<C-i>"], "after": ["<C-o>"] },
		{ "before": ["<C-o>"], "after": ["<C-i>"] },

		// n/N/*/#/g*/g# with centred
		{ "before": ["n"], "after": ["n", "z", "z"] },
		{ "before": ["N"], "after": ["N", "z", "z"] },
		{ "before": ["*"], "after": ["*", "z", "z"] },
		{ "before": ["#"], "after": ["#", "z", "z"] },
		{ "before": ["g", "*"], "after": ["g", "*", "z", "z"] },
		{ "before": ["g", "#"], "after": ["g", "#", "z", "z"] },

		// H/L — start/end of the line
		{ "before": ["H"], "after": ["^"] },
		{ "before": ["L"], "after": ["$"] },

		// <Esc> — no search highlight
		{ "before": ["<Esc>"], "commands": [":noh"] },

		// ctrl+=/-/,/. — change view size 
		{ "before": ["<C-=>"], "commands": ["workbench.action.increaseViewSize"] },
		{ "before": ["<C-->"], "commands": ["workbench.action.decreaseViewSize"] },
		{ "before": ["<C-,>"], "commands": ["workbench.action.increaseViewSize"] },
		{ "before": ["<C-.>"], "commands": ["workbench.action.decreaseViewSize"] },

		// debuger
		{
			"before": ["<F5>"],
			"commands": ["workbench.action.debug.start"]
		},
		{
			"before": ["<F1>"],
			"commands": ["workbench.action.debug.stepInto"]
		},
		{
			"before": ["<F2>"],
			"commands": ["workbench.action.debug.stepOver"]
		},
		{
			"before": ["<F3>"],
			"commands": ["workbench.action.debug.stepOut"]
		},
		{
			"before": ["<leader>", "b"],
			"commands": ["editor.debug.action.toggleBreakpoint"]
		},
		{
			"before": ["<leader>", "B"],
			"commands": ["editor.debug.action.conditionalBreakpoint"]
		},
		{
			"before": ["<F7>"],
			"commands": ["workbench.debug.action.toggleRepl"]
		},

		// work with buffers (files)
		{
			"before": ["<leader>", "f", "o"],
			"commands": ["workbench.action.showAllEditors"]
		},
		{
			"before": ["<leader>", "f", "r"],
			"commands": ["workbench.action.openRecent"]
		},
		// git status
		{
			"before": ["<leader>", "f", "g"],
			"commands": ["workbench.scm.focus"]
		},
		// git branches
		{
			"before": ["<leader>", "f", "c"],
			"commands": ["git.checkout"]
		},
		{
			"before": ["<leader>", "g", "b"],
			"commands": ["gitlens.toggleFileBlame"] 
		}
		{
			"before": ["<leader>", "g", "d"],
			"commands": ["git.openChange"] 
		},
		{
			"before": ["<leader>", "g", "s"],
			"commands": ["gitlens.partialStage"]
		},
		{
			"before": ["<leader>", "g", "p"],
			"commands": ["gitlens.diffLineWithPrevious"]
		},
		{
			"before": ["<leader>", "g", "r"],
			"commands": ["gitlens.resetSelectedLines"]
		},
		{
			"before": ["<leader>", "g", "S"],
			"commands": ["git.stage"]
		},
		{
			"before": ["<leader>", "g", "R"],
			"commands": ["gitlens.resetFile"]
		},
		{
			"before": ["]", "h"],
			"commands": ["editor.action.dirtydiff.next"]
		},
		{
			"before": ["[", "h"],
			"commands": ["editor.action.dirtydiff.previous"]
		},

		// LSP/code navigation
		{
			"before": ["g", "d"],
			"commands": ["editor.action.revealDefinition"]
		},
		{
			"before": ["<leader>", "l", "h"],
			"commands": ["editor.action.showHover"]
		},
		{
			"before": ["<leader>", "l", "R"],
			"commands": ["editor.action.rename"]
		},
		{
			"before": ["<leader>", "l", "d"],
			"commands": ["editor.action.peekDefinition"]
		},
		{
			"before": ["<leader>", "]", "d"],
			"commands": ["editor.action.marker.next"]
		},
		{
			"before": ["<leader>", "[", "d"],
			"commands": ["editor.action.marker.prev"]
		},
		{
			"before": ["<leader>", "l", "r"],
			"commands": ["editor.action.goToReferences"]
		},

		// Code actions / implementations
		{
			"before": ["<leader>", "c", "a"],
			"commands": ["editor.action.codeAction"]
		},
		{
			"before": ["<leader>", "l", "i"],
			"commands": ["editor.action.goToImplementation"]
		},
		{
			"before": ["<leader>", "l", "l"],
			"commands": ["workbench.action.restartExtensionHost"]
		}
	],

	// visual mode
	"vim.visualModeKeyBindingsNonRecursive": [
		{
			"before": ["J"],
			"commands": ["editor.action.moveLinesDownAction"]
		},
		{
			"before": ["K"],
			"commands": ["editor.action.moveLinesUpAction"]
		},

		{
			"before": ["<"],
			"after": ["<", "g", "v"]
		},
		{
			"before": [">"],
			"after": [">", "g", "v"]
		},

		// paste from (\"_dP)
		{
			"before": ["p"],
			"commands": [":normal! \\\"_dP"]
		},

		// H/L — start/end in visual
		{
			"before": ["H"],
			"after": ["^"]
		},
		{
			"before": ["L"],
			"after": ["g", "_"]
		},

		// gitsigns
		{
			"before": ["<leader>", "g", "s"],
			"commands": ["git.stageSelectedRanges"]
		},
		{
			"before": ["<leader>", "g", "r"],
			"commands": ["git.revertSelectedRanges"]
		},
	],

	"vim.operatorPendingModeKeyBindingsNonRecursive": [
		{
			"before": ["<capslock>"],
			"after": ["<Esc>"]
		},
		{
			"before": ["H"],
			"after": ["^"]
		},
		{
			"before": ["L"],
			"after": ["g", "_"]
		}
	],

	"vim.insertModeKeyBindingsNonRecursive": [
		{
			"before": ["<Esc>"],
			"after": ["<Esc>"]
		}
	],

	"vim.sneak": true,
	"explorer.confirmDelete": false,

	"window.openFilesInNewWindow": "off",
	"editor.tabSize": 2,
	"editor.folding": true,
	"editor.smoothScrolling": true,
	"editor.detectIndentation": true,
	"editor.suggestSelection": "first",

	// Wrapping
	"editor.wordWrap": "bounded",
	"editor.wrappingIndent": "same",
	"editor.wordWrapColumn": 80,

	"editor.scrollBeyondLastLine": true,
	"editor.linkedEditing": true,

	"html.autoClosingTags": true,
	"javascript.autoClosingTags": true,
	"typescript.autoClosingTags": true,

	"editor.renderControlCharacters": false,

	"editor.quickSuggestionsDelay": 0,
	"html.completion.attributeDefaultValue": "singlequotes",

	//Appearance
	// "editor.bracketPairColorization.enabled": false,
	"window.titleBarStyle": "custom",
	"window.enableMenuBarMnemonics": false,
	"terminal.integrated.allowMnemonics": false,
	"window.customMenuBarAltFocus": false,
	"editor.glyphMargin": false,
	"editor.scrollbar.horizontal": "hidden",
	"editor.scrollbar.vertical": "hidden",
	"editor.accessibilitySupport": "off",
	"workbench.layoutControl.enabled": false,

	// Font
	"editor.fontSize": 16,
	"editor.lineHeight": 30,
	"editor.fontLigatures": true,
	"editor.fontFamily": "JetBrainsMono Nerd Font Mono",

	// Cursor
	"editor.cursorBlinking": "expand",
	"editor.cursorStyle": "line-thin",
	"editor.cursorSmoothCaretAnimation": "explicit",

	"editor.tokenColorCustomizations": {
		"textMateRules": [
			{
				"scope": [
					//following will be in italic
					"comment",
					"entity.name.type.class", //class names
					"keyword", //import, export, return…
					"constant", //String, Number, Boolean…, this, super
					"storage.modifier", //static keyword
					"storage.type.class.js" //class keyword
				],
				"settings": {
					"fontStyle": "italic"
				}
			},
			{
				"scope": [
					//following will be excluded from italics (VSCode has some defaults for italics)
					"invalid",
					"keyword.operator",
					"constant.numeric.css",
					"keyword.other.unit.px.css",
					"constant.numeric.decimal.js",
					"constant.numeric.json"
				]
			}
		]
	},
	"terminal.integrated.fontSize": 15,

	//Explorer
	"explorer.confirmDelete": false,
	"explorer.compactFolders": false,
	"explorer.confirmDragAndDrop": false,
	"workbench.startupEditor": "newUntitledFile",

	//Debug
	"debug.toolBarLocation": "hidden",
	"debug.focusWindowOnBreak": false,
	"debug.showInlineBreakpointCandidates": false,
	"debug.showBreakpointsInOverviewRuler": false,

	// Emmet
	"emmet.includeLanguages": {
		"blade": "html",
		"javascript": "javascriptreact"
	},
	"emmet.triggerExpansionOnTab": true,

	//Format
	"prettier.semi": false,
	"prettier.useTabs": true,
	"editor.formatOnSave": false,
	"prettier.singleQuote": true,
	// "editor.codeActionsOnSave": {
	// 	"source.organizeImports": "explicit"
	// },
	"[prisma]": {
		"editor.defaultFormatter": "Prisma.prisma"
	},
	//Включите круглые скобки вокруг единственного параметра функции стрелки
	"prettier.arrowParens": "avoid",
	"editor.defaultFormatter": "esbenp.prettier-vscode",
	// "files.associations": { "*.scss": "postcss", "*.module.scss": "postcss" },
	"editor.inlineSuggest.enabled": true,

	//Laravel
	"[blade]": {
		"editor.defaultFormatter": "onecentlin.laravel-blade"
	},
	"[php]": {
		"editor.defaultFormatter": "DEVSENSE.phptools-vscode"
	},

	//Breadcrumbs
	"breadcrumbs.icons": false,
	"breadcrumbs.showKeys": false,
	"breadcrumbs.showFiles": false,
	"breadcrumbs.symbolPath": "off",
	"breadcrumbs.showArrays": false,
	"breadcrumbs.showEvents": false,
	"breadcrumbs.showFields": false,
	"breadcrumbs.showClasses": false,
	"breadcrumbs.showMethods": false,
	"breadcrumbs.showBooleans": false,
	"breadcrumbs.showFunctions": false,
	"breadcrumbs.showConstants": false,
	"breadcrumbs.showEnumMembers": false,
	"breadcrumbs.showConstructors": false,

	//JS & TS
	"javascript.updateImportsOnFileMove.enabled": "always",
	"typescript.updateImportsOnFileMove.enabled": "always",
	"typescript.preferences.quoteStyle": "single",
	"javascript.preferences.quoteStyle": "single",
	"javascript.format.semicolons": "remove",
	"typescript.format.semicolons": "remove",
	// Использование экспериментальных декораторов в JS/TS
	"js/ts.implicitProjectConfig.experimentalDecorators": true,

	"editor.unicodeHighlight.allowedCharacters": {
		"а": true,
		"с": true,
		"Т": true,
		"б": true,
		"е": true
	},
	"editor.hideCursorInOverviewRuler": true,
	"git.enableSmartCommit": true,

	"files.exclude": {
		"**/.expo": true,
		"**/.expo-shared": true,
		"**/.idea": true,
		"**/.next": true,
		"**/.nuxt": true,
		"**/dist": true
	},

	// OTHER
	// Язык по умолчанию для новых файлов
	"files.defaultLanguage": "plaintext",
	// Игнорировать пробелы при сравнении в редакторе diff
	"diffEditor.ignoreTrimWhitespace": false,
	// Открытие не доверенных файлов без предупреждения
	"security.workspace.trust.untrustedFiles": "open",
	// Автоматически изменять предложение автозаполнения на основе предыдущего выбора
	"vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
	// Не открывать репозиторий в родительских папках
	"git.openRepositoryInParentFolders": "never",

	// Поведение при обнаружении нескольких определений
	"editor.gotoLocation.multipleDefinitions": "goto",
	// Скрыть подсказку в пустом редакторе
	"workbench.editor.empty.hint": "hidden",
	"window.commandCenter": false,
	"editor.mouseWheelZoom": true,
	"files.autoSaveDelay": 500,
	"workbench.settings.openDefaultKeybindings": true,
	"workbench.settings.openDefaultSettings": true,
	"workbench.settings.useSplitJSON": true,
	"editor.minimap.enabled": false,
	"explorer.confirmPasteNative": false,
	"window.customTitleBarVisibility": "auto",
	"window.density.editorTabHeight": "compact",
	"workbench.iconTheme": "vscode-icons",
	"terminal.external.windowsExec": "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe",
	"git.ignoreMissingGitWarning": true,
	"files.associations": {
		"*.py": "python"
	},
	"workbench.editor.tabSizing": "shrink",
	"prettier.tabWidth": 4,
	"editor.indentSize": "tabSize",
	"prettier.printWidth": 400,
	"yaml.format.printWidth": 200,
	"editor.insertSpaces": false,
	"[sass]": {
		"editor.defaultFormatter": "syler.sass-indented"
	},
	"editor.stickyTabStops": true,
	"http.systemCertificates": false,
	"window.confirmSaveUntitledWorkspace": false,
	"editor.unicodeHighlight.ambiguousCharacters": false,
	"terminal.integrated.enableMultiLinePasteWarning": false,
	"gitlens.gitCommands.skipConfirmations": ["fetch:command", "stash-push:command", "switch:command"],
	"workbench.editor.enablePreview": false,
	"git.confirmSync": false,
	"git.autofetch": true,
	"gitlens.graph.minimap.additionalTypes": ["localBranches", "stashes", "remoteBranches", "tags"],
	"gitlens.graph.minimap.enabled": false,
	"terminal.integrated.fontFamily": "Hack Nerd Font Mono",
	"prettier.configPath": "E:\\VS Code\\prettier config\\.prettierrc",
	"prettier.requireConfig": true,
	"[ignore]": {
		"editor.defaultFormatter": "foxundermoon.shell-format"
	},
	"files.autoSave": "afterDelay",
	// "workbench.editor.showTabs": "none",
	"workbench.activityBar.location": "bottom",
	"window.menuBarVisibility": "toggle",
	"chat.instructionsFilesLocations": {
		".github/instructions": true,
		"C:\\Users\\kamusari\\AppData\\Local\\Temp\\postman-collections-post-response.instructions.md": true,
		"C:\\Users\\kamusari\\AppData\\Local\\Temp\\postman-collections-pre-request.instructions.md": true,
		"C:\\Users\\kamusari\\AppData\\Local\\Temp\\postman-folder-post-response.instructions.md": true,
		"C:\\Users\\kamusari\\AppData\\Local\\Temp\\postman-folder-pre-request.instructions.md": true,
		"C:\\Users\\kamusari\\AppData\\Local\\Temp\\postman-http-request-post-response.instructions.md": true,
		"C:\\Users\\kamusari\\AppData\\Local\\Temp\\postman-http-request-pre-request.instructions.md": true,
		"/tmp/postman-collections-post-response.instructions.md": true,
		"/tmp/postman-collections-pre-request.instructions.md": true,
		"/tmp/postman-folder-post-response.instructions.md": true,
		"/tmp/postman-folder-pre-request.instructions.md": true,
		"/tmp/postman-http-request-post-response.instructions.md": true,
		"/tmp/postman-http-request-pre-request.instructions.md": true
	},
	"terminal.integrated.profiles.windows": {
		"PowerShell": {
			"source": "PowerShell",
			"icon": "terminal-powershell"
		},
		"Command Prompt": {
			"path": ["${env:windir}\\Sysnative\\cmd.exe", "${env:windir}\\System32\\cmd.exe"],
			"args": [],
			"icon": "terminal-cmd"
		},
		"Git Bash": {
			"source": "Git Bash"
		},
		"Arch (WSL)": {
			"path": "C:\\Windows\\System32\\wsl.exe",
			"args": ["-d", "Arch"]
		}
	},
	"terminal.integrated.defaultProfile.windows": "Arch (WSL)",
	"workbench.editor.showTabs": "none",
	"security.allowedUNCHosts": ["wsl.localhost"],
	"workbench.colorTheme": "Rosé Pine (no italics)"
}
